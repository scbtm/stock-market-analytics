# Prevents issues with concurrent builds
options:
  logging: CLOUD_LOGGING_ONLY

steps:
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:latest', '.']
# Push the container image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:latest']
# Deploy container image to Cloud Run
# - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#   id: 'Deploy to Cloud Run'
#   entrypoint: gcloud
#   args:
#   - 'run'
#   - 'deploy'
#   - '$_SERVICE_NAME'
#   - '--image=$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:latest'
#   - '--region=$_REGION'
#   - '--platform=managed'
#   - '--allow-unauthenticated'
#   - '--format=value(status.url)' # Output the URL of the deployed service

# # Smoke Test Step
# - name: 'alpine'
#   id: 'Smoke Test'
#   entrypoint: 'sh'
#   args:
#   - '-c'
#   - |
#     # Install curl for smoke testing
#     apk add curl
#     # Read the deployed service URL
#     URL=$$(cat /workspace/$(steps.'Deploy to Cloud Run'.outputs.result))
#     echo "Service deployed at: $$URL"
#     # Perform a smoke test by sending a request to the service
#     if curl -s -f "$$URL" > /dev/null; then
#       echo "Smoke test passed!"
#     else
#       echo "Smoke test failed!"
#       exit 1
#     fi

# # List of images built and pushed
# images:
# - '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:latest'
